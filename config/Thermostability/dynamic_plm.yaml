setting:
  seed: 20000812
  os_environ:
    WANDB_API_KEY: ~
    WANDB_RUN_ID: ~
    CUDA_VISIBLE_DEVICES: 0,1,2,3
    MASTER_ADDR: localhost
    MASTER_PORT: 28810
    WORLD_SIZE: 1
    NODE_RANK: 0
  wandb_config:
    project: DynamicPLM-Thermostability
    name: DynamicPLM-SHP-Embedding

model:
#    Which model to use
  model_py_path: dynamic_plm/dynamic_plm_regression_model
  kwargs:
#    Arguments to initialize the specific class
    config_path: weights/PLMs/SaProt_650M_AF2
    load_pretrained: True
    freeze_backbone: False

#    Arguments to initialize the basic class AbstractModel
  lr_scheduler_kwargs:
    last_epoch: -1
    init_lr: 2.0e-5
#    Weather to use this scheduler or not
    on_use: false

  optimizer_kwargs:
    betas: [0.9, 0.98]
    weight_decay: 0.01

  save_path: weights/Thermostability/DynamicPLM_SHP_Embedding.pt

dataset:
#    Arguments to initialize the basic class LMDBDataset
  dataset_py_path: dynamic_plm/dynamic_plm_regression_dataset
  dataloader_kwargs:
    batch_size: 1     # Supporting only batch size = 1, for larger batch change the accumulate_grad_batches value
    num_workers: 4

  train_lmdb: LMDB/Thermostability/dynamic/train
  valid_lmdb: LMDB/Thermostability/dynamic/valid
  test_lmdb: LMDB/Thermostability/dynamic/test

#    Arguments to initialize the specific class
  kwargs:
    tokenizer: weights/PLMs/SaProt_650M_AF2
    mix_max_norm: [40, 67]
    plddt_threshold: 70


#  Arguments to initialize Pytorch Lightning Trainer
Trainer:
  max_epochs: 50    # 200
  log_every_n_steps: 1
  strategy:
    find_unused_parameters: True
  logger: True
  enable_checkpointing: false
  val_check_interval: 0.5
  accelerator: gpu
  devices: 4
  num_nodes: 1
  accumulate_grad_batches: 16
  precision: 16
  num_sanity_val_steps: 0
